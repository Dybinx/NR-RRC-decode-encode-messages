/* THIS FILE IS PART OF CODEC MESSAGE PROJECT ABOUT 3GPP 36.331
 * bsr_config.h - this is the header file for message: BSR-Config
 *
 * THIS PROGRAM IS NOT FREE SOFTWARE.
 * YOU SHOULD HAVE RECEIVED A COPY OF LICENSE FROM BINXIAN DUAN, IF NOT, THE BEHAVIOR IS TORT!
 * Copyright (c) 2018 Binxian Duan <binxd@126.com>. All rights reserved.
 */
#ifndef _BSR_CONFIG_H_
#define _BSR_CONFIG_H_

#include "types.h"
#include "contants.h" 				
#include "handle_bits.h"


typedef enum {
	BSR_CONFIG_PERIODICBSR_TIMER_SF1,
	BSR_CONFIG_PERIODICBSR_TIMER_SF5,
	BSR_CONFIG_PERIODICBSR_TIMER_SF10,
	BSR_CONFIG_PERIODICBSR_TIMER_SF16,
	BSR_CONFIG_PERIODICBSR_TIMER_SF20,
	BSR_CONFIG_PERIODICBSR_TIMER_SF32,
	BSR_CONFIG_PERIODICBSR_TIMER_SF40,
	BSR_CONFIG_PERIODICBSR_TIMER_SF64,
	BSR_CONFIG_PERIODICBSR_TIMER_SF80,
	BSR_CONFIG_PERIODICBSR_TIMER_SF128,
	BSR_CONFIG_PERIODICBSR_TIMER_SF160,
	BSR_CONFIG_PERIODICBSR_TIMER_SF320,
	BSR_CONFIG_PERIODICBSR_TIMER_SF640,
	BSR_CONFIG_PERIODICBSR_TIMER_SF1280,
	BSR_CONFIG_PERIODICBSR_TIMER_SF2560,
	BSR_CONFIG_PERIODICBSR_TIMER_INFINITY,
	BSR_CONFIG_PERIODICBSR_TIMER_max = 0x7FFFFFFF
}BSR_Config_periodicBSR_Timer_e;


typedef enum {
	BSR_CONFIG_RETXBSR_TIMER_SF10,
	BSR_CONFIG_RETXBSR_TIMER_SF20,
	BSR_CONFIG_RETXBSR_TIMER_SF40,
	BSR_CONFIG_RETXBSR_TIMER_SF80,
	BSR_CONFIG_RETXBSR_TIMER_SF160,
	BSR_CONFIG_RETXBSR_TIMER_SF320,
	BSR_CONFIG_RETXBSR_TIMER_SF640,
	BSR_CONFIG_RETXBSR_TIMER_SF1280,
	BSR_CONFIG_RETXBSR_TIMER_SF2560,
	BSR_CONFIG_RETXBSR_TIMER_SF5120,
	BSR_CONFIG_RETXBSR_TIMER_SF10240,
	BSR_CONFIG_RETXBSR_TIMER_SPARE5,
	BSR_CONFIG_RETXBSR_TIMER_SPARE4,
	BSR_CONFIG_RETXBSR_TIMER_SPARE3,
	BSR_CONFIG_RETXBSR_TIMER_SPARE2,
	BSR_CONFIG_RETXBSR_TIMER_SPARE1,
	BSR_CONFIG_RETXBSR_TIMER_max = 0x7FFFFFFF
}BSR_Config_retxBSR_Timer_e;


typedef enum {
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_SF20,
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_SF40,
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_SF64,
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_SF128,
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_SF512,
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_SF1024,
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_SF2560,
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_SPARE1,
	BSR_CONFIG_LOGICALCHANNELSR_DELAYTIMER_max = 0x7FFFFFFF
}BSR_Config_logicalChannelSR_DelayTimer_e;


typedef struct {
	BSR_Config_periodicBSR_Timer_e                                     periodicBSR_Timer;
	BSR_Config_retxBSR_Timer_e                                         retxBSR_Timer;
	BOOLEAN                                                            logicalChannelSR_DelayTimer_exist;
	BSR_Config_logicalChannelSR_DelayTimer_e                           logicalChannelSR_DelayTimer;
	/* Extension marker start. */
}BSR_Config_t;


extern void EncodeBSR_Config(
	BSR_Config_t *i_encoded_field, 
	uint8 *buff, 
	BitsIter *bits_iter, 
	void *asn_error);
extern void DecodeBSR_Config(
	BSR_Config_t *o_decoded_field, 
	uint8 *buff, 
	BitsIter *bits_iter, 
	void *asn_error);

#endif
